---

jenkins:
  clouds:
    - azureVM:
        azureCredentialsId: "jenkinsServicePrincipal"
        cloudName: "cnp-azure"
        deploymentTimeout: 1200
        existingResourceGroupName: "aks-infra-cftsbox-intsvc-rg"
        maxVirtualMachinesLimit: 10
        resourceGroupReferenceType: "existing"
        vmTemplates:
          - agentLaunchMethod: "SSH"
            agentWorkspace: "/opt/jenkins"
            builtInImage: "Windows Server 2016"
            credentialsId: "vm_agent_creds"
            diskType: "managed"
            doNotUseMachineIfInitFails: true
            enableMSI: false
            executeInitScriptAsRoot: true
            existingStorageAccountName: "hmctsjenkinssbox"
            imageReference:
              galleryImageDefinition: "jenkins-ubuntu"
              galleryImageVersion: "1.4.19"
              galleryName: "hmcts"
              galleryResourceGroup: "hmcts-image-gallery-rg"
              gallerySubscriptionId: "2b1afc19-5ca9-4796-a56f-574a58670244"
            imageTopLevelType: "advanced"
            initScript: |
              usermod -a -G docker jenkinsssh
              umount /mnt/resource
              mkdir -pv /opt/jenkins
              mount /dev/sdb1 /opt/jenkins
              chown -R jenkinsssh:jenkinsssh /opt/jenkins
              mv /tmp/jenkinsssh_id_rsa /home/jenkinsssh/.ssh/id_rsa
              chown jenkinsssh:jenkinsssh /home/jenkinsssh/.ssh/id_rsa
              chmod 0600 /home/jenkinsssh/.ssh/id_rsa
              mkdir /opt/jenkins/.gradle && echo 'org.gradle.daemon=false' > /opt/jenkins/.gradle/gradle.properties
              cat > /etc/dnsmasq.d/10-internal-forwarding<<EOF
              server=/#/10.99.196.9
              EOF
              systemctl restart dnsmasq
              cat > /etc/security/limits.d/30-jenkins.conf<<EOF
              jenkinsssh soft nofile 40960
              jenkinsssh hard nofile 40960
              jenkinsssh soft
              proc 32768
              jenkinsssh hard nproc 32768
              EOF
              ssh-keyscan github.com github.com >> /home/jenkinsssh/.ssh/known_hosts
              ssh-keygen -F github.com -f /home/jenkinsssh/.ssh/known_hosts # verifies key is correctly installed
            installDocker: false
            installGit: false
            installMaven: false
            jvmOptions: "-Xms4G -Xmx4G -XX:+UseG1GC -XX:+UseCompressedOops -XX:+UseCompressedClassPointers\
          \ -XX:+AlwaysPreTouch -XX:+UseStringDeduplication -XX:+ParallelRefProcEnabled\
          \ -XX:+UnlockExperimentalVMOptions -XX:G1NewSizePercent=20 -XX:+UnlockDiagnosticVMOptions\
          \ -XX:G1SummarizeRSetStatsPeriod=1"
            location: "UK South"
            noOfParallelJobs: 1
            osDiskSize: 0
            osType: "Linux"
            preInstallSsh: true
            retentionStrategy:
              azureVMCloudRetentionStrategy:
                idleTerminationMinutes: 60
            shutdownOnIdle: false
            storageAccountNameReferenceType: "existing"
            storageAccountType: "Standard_LRS"
            subnetName: "iaas"
            templateDesc: "Jenkins build agents for HMCTS"
            templateDisabled: false
            templateName: "cnp-jenkins-builders"
            usageMode: "NORMAL"
            usePrivateIP: true
            virtualMachineSize: "Standard_D4s_v3"
            virtualNetworkName: "cft-ptlsbox-vnet"
            virtualNetworkResourceGroupName: "cft-ptlsbox-network-rg"
    - kubernetes:
        addMasterProxyEnvVars: true
        containerCap: 10
        containerCapStr: "10"
        jenkinsTunnel: "jenkins-agent:50000"
        jenkinsUrl: "http://jenkins:8080"
        maxRequestsPerHost: 32
        maxRequestsPerHostStr: "32"
        name: "kubernetes"
        namespace: "jenkins"
        podLabels:
          - key: "aadpodidbinding"
            value: "jenkins"
          - key: "cloud"
            value: "kubernetes"
        templates:
          - activeDeadlineSeconds: 120
            activeDeadlineSecondsStr: "120"
            containers:
              - args: "/bin/sh -c cat"
                command: "/tini --"
                image: "hmctspublic.azurecr.io/jenkins/build-agent:db8a7c"
                livenessProbe:
                  failureThreshold: 3
                  initialDelaySeconds: 150
                  periodSeconds: 15
                  successThreshold: 1
                  timeoutSeconds: 5
                name: "inbound-agent"
                resourceLimitCpu: "3000m"
                resourceLimitMemory: "8Gi"
                resourceRequestCpu: "1000m"
                resourceRequestMemory: "2Gi"
                ttyEnabled: true
                workingDir: "/home/jenkins/agent"
              - image: "hmctspublic.azurecr.io/jenkins/minimal-agent:db6hu6"
                livenessProbe:
                  failureThreshold: 3
                  initialDelaySeconds: 150
                  periodSeconds: 15
                  successThreshold: 1
                  timeoutSeconds: 5
                name: "jnlp"
                resourceLimitCpu: "2000m"
                resourceLimitMemory: "6Gi"
                resourceRequestCpu: "500m"
                resourceRequestMemory: "1Gi"
                ttyEnabled: false
                workingDir: "/home/jenkins/agent"
            hostNetwork: false
            idleMinutes: 10
            idleMinutesStr: "10"
            instanceCap: 10
            instanceCapStr: "10"
            label: "k8s-agent"
            name: "k8s-inbound-agent"
            namespace: "jenkins"
            podRetention: "never"
            serviceAccount: "jenkins"
            supplementalGroups: "118"
            volumes:
              - hostPathVolume:
                  hostPath: "/var/run/docker.sock"
                  mountPath: "/var/run/docker.sock"
              - emptyDirVolume:
                  memory: false
                  mountPath: "/opt/jenkins"
              - emptyDirVolume:
                  memory: false
                  mountPath: "/home/jenkins/.ssh"
              - hostPathVolume:
                  hostPath: "/tmp/jenkins-agent"
                  mountPath: "/tmp/jenkins-agent"
            yaml: |-
              metadata:
                labels:
                  app.kubernetes.io/name: jenkins
                  app.kubernetes.io/component: jenkins-agent
              spec:
                securityContext:
                  runAsUser: 1000
                  fsGroup: 118
                initContainers:
                - name: init-agent
                  image: hmctspublic.azurecr.io/jenkins/minimal-agent:db6hu6
                  command:
                    - /bin/sh
                    - -c
                    - "chown 0:118 /tmp/jenkins-agent && chmod g+rwx /tmp/jenkins-agent"
                  volumeMounts:
                    - mountPath: /tmp/jenkins-agent
                      name: volume-3
                  securityContext:
                    runAsUser: 0
                    runAsGroup: 0
                    privileged: true
                affinity:
                  podAntiAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      - labelSelector:
                          matchExpressions:
                            - key: app.kubernetes.io/component
                              operator: In
                              values:
                                - jenkins-master
                        topologyKey: "kubernetes.io/hostname"
            yamlMergeStrategy: "merge"
            yamls:
              - |-
                metadata:
                  labels:
                    app.kubernetes.io/name: jenkins
                    app.kubernetes.io/component: jenkins-agent
                spec:
                  securityContext:
                    runAsUser: 1000
                    fsGroup: 118
                  initContainers:
                  - name: init-agent
                    image: hmctspublic.azurecr.io/jenkins/minimal-agent:db6hu6
                    command:
                      - /bin/sh
                      - -c
                      - "chown 0:118 /tmp/jenkins-agent && chmod g+rwx /tmp/jenkins-agent"
                    volumeMounts:
                      - mountPath: /tmp/jenkins-agent
                        name: volume-3
                    securityContext:
                      runAsUser: 0
                      runAsGroup: 0
                      privileged: true
                  affinity:
                    podAntiAffinity:
                      requiredDuringSchedulingIgnoredDuringExecution:
                        - labelSelector:
                            matchExpressions:
                              - key: app.kubernetes.io/component
                                operator: In
                                values:
                                  - jenkins-master
                          topologyKey: "kubernetes.io/hostname"
  systemMessage: >-
    This jenkins is managed by configuration as code, update <a
    href="https://github.com/hmcts/cnp-jenkins-config/blob/master/cac-test.yml">here</a>
  globalNodeProperties:
    - envVars:
        env:
          - key: INFRA_VAULT_NAME
            value: infra-vault-sandbox
          - key: NONPROD_ENVIRONMENT_NAME
            value: saat
          - key: NONPROD_SUBSCRIPTION_NAME
            value: sandbox
          - key: PROD_ENVIRONMENT_NAME
            value: sprod
          - key: PROD_SUBSCRIPTION_NAME
            value: sandbox
          - key: JAVA_OPTS
            value: -Xmx2g -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
          - key: GRADLE_OPTS
            value: -Xmx2g -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
  disabledAdministrativeMonitors:
    - "jenkins.security.QueueItemAuthenticatorMonitor"
    - "jenkins.security.s2m.MasterKillSwitchWarning"
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: false
  markupFormatter:
    rawHtml:
      disableSyntaxHighlighting: false
  numExecutors: 0
  primaryView:
    all:
      name: all
  views:
    - all:
        name: all
    - buildMonitor:
        includeRegex: >-
          ^HMCTS_.*(Platform|CNP).*\/(draft-store|rpe-pdf-service|feature-toggle-api|service-auth-provider-app|spring-boot-template|cnp-rhubarb-recipes-service|cnp-plum-recipes-service|cnp-plum-frontend|cnp-plum-shared-infrastructure)\/master
        name: Platform
        recurse: true
        title: Platform
    - buildMonitor:
        includeRegex: >-
          ^HMCTS_.*LABS-.*\/.+\/master
        name: LABS
        recurse: true
        title: Labs
  authorizationStrategy:
    globalMatrix:
      permissions:
        - "GROUP:Overall/Administer:authenticated"
        - "GROUP:Overall/Administer:e7ea2042-4ced-45dd-8ae3-e051c6551789"
        - "GROUP:Overall/Read:authenticated"
        - "GROUP:View/Create:authenticated"
        - "GROUP:View/Read:authenticated"
        - "GROUP:View/Configure:authenticated"
        - "GROUP:View/Delete:authenticated"
        - "GROUP:Agent/Create:authenticated"
        - "GROUP:Agent/Build:authenticated"
        - "GROUP:Agent/Connect:authenticated"
        - "GROUP:Agent/Delete:authenticated"
        - "GROUP:Agent/Configure:authenticated"
        - "GROUP:Agent/Disconnect:authenticated"
        - "GROUP:Run/Delete:authenticated"
        - "GROUP:Run/Replay:authenticated"
        - "GROUP:Run/Update:authenticated"
        - "GROUP:Job/Configure:authenticated"
        - "GROUP:Job/Cancel:authenticated"
        - "GROUP:Job/Read:authenticated"
        - "GROUP:Job/Build:authenticated"
        - "GROUP:Job/Move:authenticated"
        - "GROUP:Job/Discover:authenticated"
        - "USER:Job/Discover:anonymous"
        - "GROUP:Job/Create:authenticated"
        - "GROUP:Job/Workspace:authenticated"
        - "GROUP:Job/Delete:authenticated"
        - "GROUP:Credentials/View:authenticated"
        - "GROUP:Lockable Resources/Unlock:authenticated"
        - "GROUP:Lockable Resources/Reserve:authenticated"
        - "GROUP:SCM/Tag:authenticated"
  securityRealm:
    local:
      allowsSignup: false
      users:
        - id: "admin"
          password: "admin"

unclassified:
  location:
    adminAddress: jenkins-reform@hmcts.net
    url: 'http://localhost:8088'
  gitHubConfiguration:
    apiRateLimitChecker: ThrottleOnOver
  globalLibraries:
    libraries:
      - name: 'Infrastructure'
        includeInChangesets: false
        defaultVersion: master
        retriever:
          modernSCM:
            scm:
              github:
                credentialsId: hmcts-jenkins-cnp
                repoOwner: hmcts
                repository: cnp-jenkins-library
      - name: 'Pipeline'
        includeInChangesets: false
        defaultVersion: master
        retriever:
          modernSCM:
            scm:
              github:
                credentialsId: hmcts-jenkins-cnp
                repoOwner: hmcts
                repository: cnp-jenkins-library
  defaultFolderConfiguration:
    healthMetrics:
    - "primaryBranchHealthMetric"
  slackNotifier:
    teamDomain: hmcts-reform
    tokenCredentialId: slack-token
    botUser: true
  globalDefaultFlowDurabilityLevel:
    durabilityHint: PERFORMANCE_OPTIMIZED
  themeManager:
    theme: "darkSystem"
  azureKeyVault:
    keyVaultURL: https://infra-vault-sandbox.vault.azure.net
    credentialID: jenkinsServicePrincipal
  sonarGlobalConfiguration:
    installations:
      - additionalAnalysisProperties: sonar.organization=hmcts
        name: SonarQube
        credentialsId: 'sonarcloud-api-token'
        serverUrl: 'https://sonarcloud.io'
  timestamper:
    allPipelines: true
  buildDiscarders:
    configuredBuildDiscarders:
      - "jobBuildDiscarder"
      - simpleBuildDiscarder:
          discarder:
            logRotator:
              artifactDaysToKeepStr: "14"
              artifactNumToKeepStr: "20"
              daysToKeepStr: "14"
              numToKeepStr: "20"
credentials:
  system:
    domainCredentials:
      - credentials:
          - string:
              scope: GLOBAL
              id: sonarcloud-api-token
              secret: '${sonarcloud-api-token}'
              description: SonarCloud API token
          - string:
              scope: GLOBAL
              id: slack-token
              secret: '${slack-token}'
              description: Slack token
          - usernamePassword:
              description: "SSH credentials for Jenkins agents"
              id: "vm_agent_creds"
              password: "${mgmt-bastion-creds-password}"
              scope: GLOBAL
              username: "jenkinsssh"
          - string:
              description: "Read/Write Key To Publish CosmosDB Metrics"
              id: "COSMOSDB_TOKEN_KEY"
              scope: GLOBAL
              secret: "${pipelinemetrics-cosmosdb-key}"
          - usernamePassword:
              description: "Username and password for the OWASP vulnerability database"
              id: "owasp-db-login"
              password: "${OWASPDb-Password}"
              scope: GLOBAL
              username: "owasp_administrator"
          - usernamePassword:
              description: "Storage account name and access key for storing build reports"
              id: "buildlog-storage-account"
              password: "${jenkins-build-logs-key}"
              scope: GLOBAL
              username: "mgmtbuildlogstoresandbox"
          - sauce:
              apiKey: "${sauce-access-key}"
              description: "Sauce Labs Reform Key"
              id: "reform_tunnel"
              scope: GLOBAL
              username: "reform"
          - azure:
              azureEnvironmentName: "Azure"
              clientId: "${jenkins-sp-client-id}"
              clientSecret: "${jenkins-sp-client-secret}"
              description: "Jenkins Service Principal - only has access to infra key vault"
              id: "jenkinsServicePrincipal"
              scope: GLOBAL
              subscriptionId: "${jenkins-sp-subscription-id}"
              tenant: "${jenkins-sp-tenant-id}"
          - gitHubApp:
              appID: "${hmcts-jenkins-a-to-c-appid}"
              description: "GitHub APP Key - A to C"
              id: "hmcts-jenkins-a-to-c"
              privateKey: "${hmcts-jenkins-a-to-c-ghapp}"
          - gitHubApp:
              appID: "${hmcts-jenkins-d-to-i-appid}"
              description: "GitHub APP Key - D to I"
              id: "hmcts-jenkins-d-to-i"
              privateKey: "${hmcts-jenkins-d-to-i-ghapp}"
          - gitHubApp:
              appID: "${hmcts-jenkins-j-to-z-appid}"
              description: "GitHub APP Key - J to Z"
              id: "hmcts-jenkins-j-to-z"
              privateKey: "${hmcts-jenkins-j-to-z-ghapp}"

jobs:
  - file: '/usr/share/jenkins/jobdsl/organisations-cnptest.groovy'
